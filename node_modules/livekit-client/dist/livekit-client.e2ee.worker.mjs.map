{"version":3,"file":"livekit-client.e2ee.worker.mjs","sources":["../node_modules/.pnpm/loglevel@1.8.1/node_modules/loglevel/lib/loglevel.js","../src/logger.ts","../src/e2ee/constants.ts","../src/room/errors.ts","../src/e2ee/errors.ts","../src/e2ee/events.ts","../node_modules/.pnpm/events@3.3.0/node_modules/events/events.js","../src/e2ee/utils.ts","../src/e2ee/worker/SifGuard.ts","../src/e2ee/worker/FrameCryptor.ts","../src/e2ee/worker/ParticipantKeyHandler.ts","../src/e2ee/worker/e2ee.worker.ts"],"sourcesContent":["/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      defaultLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      function clearPersistedLevel() {\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage.removeItem(storageKey);\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n          } catch (ignore) {}\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          defaultLevel = level;\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.resetLevel = function () {\n          self.setLevel(defaultLevel, false);\n          clearPersistedLevel();\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n","import * as log from 'loglevel';\n\nexport enum LogLevel {\n  trace = 0,\n  debug = 1,\n  info = 2,\n  warn = 3,\n  error = 4,\n  silent = 5,\n}\n\nexport enum LoggerNames {\n  Default = 'livekit',\n  Room = 'livekit-room',\n  Participant = 'livekit-participant',\n  Track = 'livekit-track',\n  Publication = 'livekit-track-publication',\n  Engine = 'livekit-engine',\n  Signal = 'livekit-signal',\n  PCManager = 'livekit-pc-manager',\n  PCTransport = 'livekit-pc-transport',\n  E2EE = 'lk-e2ee',\n}\n\ntype LogLevelString = keyof typeof LogLevel;\n\nexport type StructuredLogger = {\n  trace: (msg: string, context?: object) => void;\n  debug: (msg: string, context?: object) => void;\n  info: (msg: string, context?: object) => void;\n  warn: (msg: string, context?: object) => void;\n  error: (msg: string, context?: object) => void;\n  setDefaultLevel: (level: log.LogLevelDesc) => void;\n};\n\nlet livekitLogger = log.getLogger('livekit');\n\nlivekitLogger.setDefaultLevel(LogLevel.info);\n\nexport default livekitLogger as StructuredLogger;\n\n/**\n * @internal\n */\nexport function getLogger(name: string) {\n  const logger = log.getLogger(name);\n  logger.setDefaultLevel(livekitLogger.getLevel());\n  return logger as StructuredLogger;\n}\n\nexport function setLogLevel(level: LogLevel | LogLevelString, loggerName?: LoggerNames) {\n  if (loggerName) {\n    log.getLogger(loggerName).setLevel(level);\n  }\n  for (const logger of Object.entries(log.getLoggers())\n    .filter(([logrName]) => logrName.startsWith('livekit'))\n    .map(([, logr]) => logr)) {\n    logger.setLevel(level);\n  }\n}\n\nexport type LogExtension = (level: LogLevel, msg: string, context?: object) => void;\n\n/**\n * use this to hook into the logging function to allow sending internal livekit logs to third party services\n * if set, the browser logs will lose their stacktrace information (see https://github.com/pimterry/loglevel#writing-plugins)\n */\nexport function setLogExtension(extension: LogExtension, logger = livekitLogger) {\n  const originalFactory = logger.methodFactory;\n\n  logger.methodFactory = (methodName, configLevel, loggerName) => {\n    const rawMethod = originalFactory(methodName, configLevel, loggerName);\n\n    const logLevel = LogLevel[methodName as LogLevelString];\n    const needLog = logLevel >= configLevel && logLevel < LogLevel.silent;\n\n    return (msg, context?: [msg: string, context: object]) => {\n      if (context) rawMethod(msg, context);\n      else rawMethod(msg);\n      if (needLog) {\n        extension(logLevel, msg, context);\n      }\n    };\n  };\n  logger.setLevel(logger.getLevel()); // Be sure to call setLevel method in order to apply plugin\n}\n\nexport const workerLogger = log.getLogger('lk-e2ee') as StructuredLogger;\n","import type { KeyProviderOptions } from './types';\n\nexport const ENCRYPTION_ALGORITHM = 'AES-GCM';\n\n// We use a ringbuffer of keys so we can change them and still decode packets that were\n// encrypted with an old key. We use a size of 16 which corresponds to the four bits\n// in the frame trailer.\nexport const KEYRING_SIZE = 16;\n\n// How many consecutive frames can fail decrypting before a particular key gets marked as invalid\nexport const DECRYPTION_FAILURE_TOLERANCE = 10;\n\n// We copy the first bytes of the VP8 payload unencrypted.\n// For keyframes this is 10 bytes, for non-keyframes (delta) 3. See\n//   https://tools.ietf.org/html/rfc6386#section-9.1\n// This allows the bridge to continue detecting keyframes (only one byte needed in the JVB)\n// and is also a bit easier for the VP8 decoder (i.e. it generates funny garbage pictures\n// instead of being unable to decode).\n// This is a bit for show and we might want to reduce to 1 unconditionally in the final version.\n//\n// For audio (where frame.type is not set) we do not encrypt the opus TOC byte:\n//   https://tools.ietf.org/html/rfc6716#section-3.1\nexport const UNENCRYPTED_BYTES = {\n  key: 10,\n  delta: 3,\n  audio: 1, // frame.type is not set on audio, so this is set manually\n  empty: 0,\n} as const;\n\n/* We use a 12 byte bit IV. This is signalled in plain together with the\n packet. See https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/encrypt#parameters */\nexport const IV_LENGTH = 12;\n\n// flag set to indicate that e2ee has been setup for sender/receiver;\nexport const E2EE_FLAG = 'lk_e2ee';\n\nexport const SALT = 'LKFrameEncryptionKey';\n\nexport const KEY_PROVIDER_DEFAULTS: KeyProviderOptions = {\n  sharedKey: false,\n  ratchetSalt: SALT,\n  ratchetWindowSize: 8,\n  failureTolerance: DECRYPTION_FAILURE_TOLERANCE,\n} as const;\n\nexport const MAX_SIF_COUNT = 100;\nexport const MAX_SIF_DURATION = 2000;\n","export class LivekitError extends Error {\n  code: number;\n\n  constructor(code: number, message?: string) {\n    super(message || 'an error has occured');\n    this.code = code;\n  }\n}\n\nexport const enum ConnectionErrorReason {\n  NotAllowed,\n  ServerUnreachable,\n  InternalError,\n  Cancelled,\n  LeaveRequest,\n}\n\nexport class ConnectionError extends LivekitError {\n  status?: number;\n\n  reason?: ConnectionErrorReason;\n\n  constructor(message?: string, reason?: ConnectionErrorReason, status?: number) {\n    super(1, message);\n    this.status = status;\n    this.reason = reason;\n  }\n}\n\nexport class DeviceUnsupportedError extends LivekitError {\n  constructor(message?: string) {\n    super(21, message ?? 'device is unsupported');\n  }\n}\n\nexport class TrackInvalidError extends LivekitError {\n  constructor(message?: string) {\n    super(20, message ?? 'track is invalid');\n  }\n}\n\nexport class UnsupportedServer extends LivekitError {\n  constructor(message?: string) {\n    super(10, message ?? 'unsupported server');\n  }\n}\n\nexport class UnexpectedConnectionState extends LivekitError {\n  constructor(message?: string) {\n    super(12, message ?? 'unexpected connection state');\n  }\n}\n\nexport class NegotiationError extends LivekitError {\n  constructor(message?: string) {\n    super(13, message ?? 'unable to negotiate');\n  }\n}\n\nexport class PublishDataError extends LivekitError {\n  constructor(message?: string) {\n    super(13, message ?? 'unable to publish data');\n  }\n}\n\nexport enum MediaDeviceFailure {\n  // user rejected permissions\n  PermissionDenied = 'PermissionDenied',\n  // device is not available\n  NotFound = 'NotFound',\n  // device is in use. On Windows, only a single tab may get access to a device at a time.\n  DeviceInUse = 'DeviceInUse',\n  Other = 'Other',\n}\n\nexport namespace MediaDeviceFailure {\n  export function getFailure(error: any): MediaDeviceFailure | undefined {\n    if (error && 'name' in error) {\n      if (error.name === 'NotFoundError' || error.name === 'DevicesNotFoundError') {\n        return MediaDeviceFailure.NotFound;\n      }\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDeniedError') {\n        return MediaDeviceFailure.PermissionDenied;\n      }\n      if (error.name === 'NotReadableError' || error.name === 'TrackStartError') {\n        return MediaDeviceFailure.DeviceInUse;\n      }\n      return MediaDeviceFailure.Other;\n    }\n  }\n}\n","import { LivekitError } from '../room/errors';\n\nexport enum CryptorErrorReason {\n  InvalidKey = 0,\n  MissingKey = 1,\n  InternalError = 2,\n}\n\nexport class CryptorError extends LivekitError {\n  reason: CryptorErrorReason;\n\n  constructor(message?: string, reason: CryptorErrorReason = CryptorErrorReason.InternalError) {\n    super(40, message);\n    this.reason = reason;\n  }\n}\n","import type Participant from '../room/participant/Participant';\nimport type { CryptorError } from './errors';\nimport type { KeyInfo } from './types';\n\nexport enum KeyProviderEvent {\n  SetKey = 'setKey',\n  RatchetRequest = 'ratchetRequest',\n  KeyRatcheted = 'keyRatcheted',\n}\n\nexport type KeyProviderCallbacks = {\n  [KeyProviderEvent.SetKey]: (keyInfo: KeyInfo) => void;\n  [KeyProviderEvent.RatchetRequest]: (participantIdentity?: string, keyIndex?: number) => void;\n  [KeyProviderEvent.KeyRatcheted]: (material: CryptoKey, keyIndex?: number) => void;\n};\n\nexport enum KeyHandlerEvent {\n  KeyRatcheted = 'keyRatcheted',\n}\n\nexport type ParticipantKeyHandlerCallbacks = {\n  [KeyHandlerEvent.KeyRatcheted]: (\n    material: CryptoKey,\n    participantIdentity: string,\n    keyIndex?: number,\n  ) => void;\n};\n\nexport enum EncryptionEvent {\n  ParticipantEncryptionStatusChanged = 'participantEncryptionStatusChanged',\n  EncryptionError = 'encryptionError',\n}\n\nexport type E2EEManagerCallbacks = {\n  [EncryptionEvent.ParticipantEncryptionStatusChanged]: (\n    enabled: boolean,\n    participant: Participant,\n  ) => void;\n  [EncryptionEvent.EncryptionError]: (error: Error) => void;\n};\n\nexport type CryptorCallbacks = {\n  [CryptorEvent.Error]: (error: CryptorError) => void;\n};\n\nexport enum CryptorEvent {\n  Error = 'cryptorError',\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","import { ENCRYPTION_ALGORITHM } from './constants';\n\nexport function isE2EESupported() {\n  return isInsertableStreamSupported() || isScriptTransformSupported();\n}\n\nexport function isScriptTransformSupported() {\n  // @ts-ignore\n  return typeof window.RTCRtpScriptTransform !== 'undefined';\n}\n\nexport function isInsertableStreamSupported() {\n  return (\n    typeof window.RTCRtpSender !== 'undefined' &&\n    // @ts-ignore\n    typeof window.RTCRtpSender.prototype.createEncodedStreams !== 'undefined'\n  );\n}\n\nexport function isVideoFrame(\n  frame: RTCEncodedAudioFrame | RTCEncodedVideoFrame,\n): frame is RTCEncodedVideoFrame {\n  return 'type' in frame;\n}\n\nexport async function importKey(\n  keyBytes: Uint8Array | ArrayBuffer,\n  algorithm: string | { name: string } = { name: ENCRYPTION_ALGORITHM },\n  usage: 'derive' | 'encrypt' = 'encrypt',\n) {\n  // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/importKey\n  return crypto.subtle.importKey(\n    'raw',\n    keyBytes,\n    algorithm,\n    false,\n    usage === 'derive' ? ['deriveBits', 'deriveKey'] : ['encrypt', 'decrypt'],\n  );\n}\n\nexport async function createKeyMaterialFromString(password: string) {\n  let enc = new TextEncoder();\n\n  const keyMaterial = await crypto.subtle.importKey(\n    'raw',\n    enc.encode(password),\n    {\n      name: 'PBKDF2',\n    },\n    false,\n    ['deriveBits', 'deriveKey'],\n  );\n\n  return keyMaterial;\n}\n\nexport async function createKeyMaterialFromBuffer(cryptoBuffer: ArrayBuffer) {\n  const keyMaterial = await crypto.subtle.importKey('raw', cryptoBuffer, 'HKDF', false, [\n    'deriveBits',\n    'deriveKey',\n  ]);\n\n  return keyMaterial;\n}\n\nfunction getAlgoOptions(algorithmName: string, salt: string) {\n  const textEncoder = new TextEncoder();\n  const encodedSalt = textEncoder.encode(salt);\n  switch (algorithmName) {\n    case 'HKDF':\n      return {\n        name: 'HKDF',\n        salt: encodedSalt,\n        hash: 'SHA-256',\n        info: new ArrayBuffer(128),\n      };\n    case 'PBKDF2': {\n      return {\n        name: 'PBKDF2',\n        salt: encodedSalt,\n        hash: 'SHA-256',\n        iterations: 100000,\n      };\n    }\n    default:\n      throw new Error(`algorithm ${algorithmName} is currently unsupported`);\n  }\n}\n\n/**\n * Derives a set of keys from the master key.\n * See https://tools.ietf.org/html/draft-omara-sframe-00#section-4.3.1\n */\nexport async function deriveKeys(material: CryptoKey, salt: string) {\n  const algorithmOptions = getAlgoOptions(material.algorithm.name, salt);\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/deriveKey#HKDF\n  // https://developer.mozilla.org/en-US/docs/Web/API/HkdfParams\n  const encryptionKey = await crypto.subtle.deriveKey(\n    algorithmOptions,\n    material,\n    {\n      name: ENCRYPTION_ALGORITHM,\n      length: 128,\n    },\n    false,\n    ['encrypt', 'decrypt'],\n  );\n\n  return { material, encryptionKey };\n}\n\nexport function createE2EEKey(): Uint8Array {\n  return window.crypto.getRandomValues(new Uint8Array(32));\n}\n\n/**\n * Ratchets a key. See\n * https://tools.ietf.org/html/draft-omara-sframe-00#section-4.3.5.1\n */\nexport async function ratchet(material: CryptoKey, salt: string): Promise<ArrayBuffer> {\n  const algorithmOptions = getAlgoOptions(material.algorithm.name, salt);\n\n  // https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/deriveBits\n  return crypto.subtle.deriveBits(algorithmOptions, material, 256);\n}\n\nexport function needsRbspUnescaping(frameData: Uint8Array) {\n  for (var i = 0; i < frameData.length - 3; i++) {\n    if (frameData[i] == 0 && frameData[i + 1] == 0 && frameData[i + 2] == 3) return true;\n  }\n  return false;\n}\n\nexport function parseRbsp(stream: Uint8Array): Uint8Array {\n  const dataOut: number[] = [];\n  var length = stream.length;\n  for (var i = 0; i < stream.length; ) {\n    // Be careful about over/underflow here. byte_length_ - 3 can underflow, and\n    // i + 3 can overflow, but byte_length_ - i can't, because i < byte_length_\n    // above, and that expression will produce the number of bytes left in\n    // the stream including the byte at i.\n    if (length - i >= 3 && !stream[i] && !stream[i + 1] && stream[i + 2] == 3) {\n      // Two rbsp bytes.\n      dataOut.push(stream[i++]);\n      dataOut.push(stream[i++]);\n      // Skip the emulation byte.\n      i++;\n    } else {\n      // Single rbsp byte.\n      dataOut.push(stream[i++]);\n    }\n  }\n  return new Uint8Array(dataOut);\n}\n\nconst kZerosInStartSequence = 2;\nconst kEmulationByte = 3;\n\nexport function writeRbsp(data_in: Uint8Array): Uint8Array {\n  const dataOut: number[] = [];\n  var numConsecutiveZeros = 0;\n  for (var i = 0; i < data_in.length; ++i) {\n    var byte = data_in[i];\n    if (byte <= kEmulationByte && numConsecutiveZeros >= kZerosInStartSequence) {\n      // Need to escape.\n      dataOut.push(kEmulationByte);\n      numConsecutiveZeros = 0;\n    }\n    dataOut.push(byte);\n    if (byte == 0) {\n      ++numConsecutiveZeros;\n    } else {\n      numConsecutiveZeros = 0;\n    }\n  }\n  return new Uint8Array(dataOut);\n}\n","import { MAX_SIF_COUNT, MAX_SIF_DURATION } from '../constants';\n\nexport class SifGuard {\n  private consecutiveSifCount = 0;\n\n  private sifSequenceStartedAt: number | undefined;\n\n  private lastSifReceivedAt: number = 0;\n\n  private userFramesSinceSif: number = 0;\n\n  recordSif() {\n    this.consecutiveSifCount += 1;\n    this.sifSequenceStartedAt ??= Date.now();\n    this.lastSifReceivedAt = Date.now();\n  }\n\n  recordUserFrame() {\n    if (this.sifSequenceStartedAt === undefined) {\n      return;\n    } else {\n      this.userFramesSinceSif += 1;\n    }\n    if (\n      // reset if we received more user frames than SIFs\n      this.userFramesSinceSif > this.consecutiveSifCount ||\n      // also reset if we got a new user frame and the latest SIF frame hasn't been updated in a while\n      Date.now() - this.lastSifReceivedAt > MAX_SIF_DURATION\n    ) {\n      this.reset();\n    }\n  }\n\n  isSifAllowed() {\n    return (\n      this.consecutiveSifCount < MAX_SIF_COUNT &&\n      (this.sifSequenceStartedAt === undefined ||\n        Date.now() - this.sifSequenceStartedAt < MAX_SIF_DURATION)\n    );\n  }\n\n  reset() {\n    this.userFramesSinceSif = 0;\n    this.consecutiveSifCount = 0;\n    this.sifSequenceStartedAt = undefined;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\n// TODO code inspired by https://github.com/webrtc/samples/blob/gh-pages/src/content/insertable-streams/endtoend-encryption/js/worker.js\nimport { EventEmitter } from 'events';\nimport type TypedEventEmitter from 'typed-emitter';\nimport { workerLogger } from '../../logger';\nimport type { VideoCodec } from '../../room/track/options';\nimport { ENCRYPTION_ALGORITHM, IV_LENGTH, UNENCRYPTED_BYTES } from '../constants';\nimport { CryptorError, CryptorErrorReason } from '../errors';\nimport { CryptorCallbacks, CryptorEvent } from '../events';\nimport type { DecodeRatchetOptions, KeyProviderOptions, KeySet } from '../types';\nimport { deriveKeys, isVideoFrame, needsRbspUnescaping, parseRbsp, writeRbsp } from '../utils';\nimport type { ParticipantKeyHandler } from './ParticipantKeyHandler';\nimport { SifGuard } from './SifGuard';\n\nexport const encryptionEnabledMap: Map<string, boolean> = new Map();\n\nexport interface FrameCryptorConstructor {\n  new (opts?: unknown): BaseFrameCryptor;\n}\n\nexport interface TransformerInfo {\n  readable: ReadableStream;\n  writable: WritableStream;\n  transformer: TransformStream;\n  abortController: AbortController;\n}\n\nexport class BaseFrameCryptor extends (EventEmitter as new () => TypedEventEmitter<CryptorCallbacks>) {\n  protected encodeFunction(\n    encodedFrame: RTCEncodedVideoFrame | RTCEncodedAudioFrame,\n    controller: TransformStreamDefaultController,\n  ): Promise<any> {\n    throw Error('not implemented for subclass');\n  }\n\n  protected decodeFunction(\n    encodedFrame: RTCEncodedVideoFrame | RTCEncodedAudioFrame,\n    controller: TransformStreamDefaultController,\n  ): Promise<any> {\n    throw Error('not implemented for subclass');\n  }\n}\n\n/**\n * Cryptor is responsible for en-/decrypting media frames.\n * Each Cryptor instance is responsible for en-/decrypting a single mediaStreamTrack.\n */\nexport class FrameCryptor extends BaseFrameCryptor {\n  private sendCounts: Map<number, number>;\n\n  private participantIdentity: string | undefined;\n\n  private trackId: string | undefined;\n\n  private keys: ParticipantKeyHandler;\n\n  private videoCodec?: VideoCodec;\n\n  private rtpMap: Map<number, VideoCodec>;\n\n  private keyProviderOptions: KeyProviderOptions;\n\n  /**\n   * used for detecting server injected unencrypted frames\n   */\n  private sifTrailer: Uint8Array;\n\n  private sifGuard: SifGuard;\n\n  constructor(opts: {\n    keys: ParticipantKeyHandler;\n    participantIdentity: string;\n    keyProviderOptions: KeyProviderOptions;\n    sifTrailer?: Uint8Array;\n  }) {\n    super();\n    this.sendCounts = new Map();\n    this.keys = opts.keys;\n    this.participantIdentity = opts.participantIdentity;\n    this.rtpMap = new Map();\n    this.keyProviderOptions = opts.keyProviderOptions;\n    this.sifTrailer = opts.sifTrailer ?? Uint8Array.from([]);\n    this.sifGuard = new SifGuard();\n  }\n\n  /**\n   * Assign a different participant to the cryptor.\n   * useful for transceiver re-use\n   * @param id\n   * @param keys\n   */\n  setParticipant(id: string, keys: ParticipantKeyHandler) {\n    this.participantIdentity = id;\n    this.keys = keys;\n    this.sifGuard.reset();\n  }\n\n  unsetParticipant() {\n    this.participantIdentity = undefined;\n  }\n\n  isEnabled() {\n    if (this.participantIdentity) {\n      return encryptionEnabledMap.get(this.participantIdentity);\n    } else {\n      return undefined;\n    }\n  }\n\n  getParticipantIdentity() {\n    return this.participantIdentity;\n  }\n\n  getTrackId() {\n    return this.trackId;\n  }\n\n  /**\n   * Update the video codec used by the mediaStreamTrack\n   * @param codec\n   */\n  setVideoCodec(codec: VideoCodec) {\n    this.videoCodec = codec;\n  }\n\n  /**\n   * rtp payload type map used for figuring out codec of payload type when encoding\n   * @param map\n   */\n  setRtpMap(map: Map<number, VideoCodec>) {\n    this.rtpMap = map;\n  }\n\n  setupTransform(\n    operation: 'encode' | 'decode',\n    readable: ReadableStream,\n    writable: WritableStream,\n    trackId: string,\n    codec?: VideoCodec,\n  ) {\n    if (codec) {\n      workerLogger.info('setting codec on cryptor to', { codec });\n      this.videoCodec = codec;\n    }\n\n    const transformFn = operation === 'encode' ? this.encodeFunction : this.decodeFunction;\n    const transformStream = new TransformStream({\n      transform: transformFn.bind(this),\n    });\n\n    readable\n      .pipeThrough(transformStream)\n      .pipeTo(writable)\n      .catch((e) => {\n        workerLogger.warn(e);\n        this.emit(CryptorEvent.Error, e instanceof CryptorError ? e : new CryptorError(e.message));\n      });\n    this.trackId = trackId;\n  }\n\n  setSifTrailer(trailer: Uint8Array) {\n    this.sifTrailer = trailer;\n  }\n\n  /**\n   * Function that will be injected in a stream and will encrypt the given encoded frames.\n   *\n   * @param {RTCEncodedVideoFrame|RTCEncodedAudioFrame} encodedFrame - Encoded video frame.\n   * @param {TransformStreamDefaultController} controller - TransportStreamController.\n   *\n   * The VP8 payload descriptor described in\n   * https://tools.ietf.org/html/rfc7741#section-4.2\n   * is part of the RTP packet and not part of the frame and is not controllable by us.\n   * This is fine as the SFU keeps having access to it for routing.\n   *\n   * The encrypted frame is formed as follows:\n   * 1) Find unencrypted byte length, depending on the codec, frame type and kind.\n   * 2) Form the GCM IV for the frame as described above.\n   * 3) Encrypt the rest of the frame using AES-GCM.\n   * 4) Allocate space for the encrypted frame.\n   * 5) Copy the unencrypted bytes to the start of the encrypted frame.\n   * 6) Append the ciphertext to the encrypted frame.\n   * 7) Append the IV.\n   * 8) Append a single byte for the key identifier.\n   * 9) Enqueue the encrypted frame for sending.\n   */\n  protected async encodeFunction(\n    encodedFrame: RTCEncodedVideoFrame | RTCEncodedAudioFrame,\n    controller: TransformStreamDefaultController,\n  ) {\n    if (\n      !this.isEnabled() ||\n      // skip for encryption for empty dtx frames\n      encodedFrame.data.byteLength === 0\n    ) {\n      return controller.enqueue(encodedFrame);\n    }\n    const keySet = this.keys.getKeySet();\n    if (!keySet) {\n      throw new TypeError(\n        `key set not found for ${\n          this.participantIdentity\n        } at index ${this.keys.getCurrentKeyIndex()}`,\n      );\n    }\n    const { encryptionKey } = keySet;\n    const keyIndex = this.keys.getCurrentKeyIndex();\n\n    if (encryptionKey) {\n      const iv = this.makeIV(\n        encodedFrame.getMetadata().synchronizationSource ?? -1,\n        encodedFrame.timestamp,\n      );\n      let frameInfo = this.getUnencryptedBytes(encodedFrame);\n      // Thіs is not encrypted and contains the VP8 payload descriptor or the Opus TOC byte.\n      const frameHeader = new Uint8Array(encodedFrame.data, 0, frameInfo.unencryptedBytes);\n\n      // Frame trailer contains the R|IV_LENGTH and key index\n      const frameTrailer = new Uint8Array(2);\n\n      frameTrailer[0] = IV_LENGTH;\n      frameTrailer[1] = keyIndex;\n\n      // Construct frame trailer. Similar to the frame header described in\n      // https://tools.ietf.org/html/draft-omara-sframe-00#section-4.2\n      // but we put it at the end.\n      //\n      // ---------+-------------------------+-+---------+----\n      // payload  |IV...(length = IV_LENGTH)|R|IV_LENGTH|KID |\n      // ---------+-------------------------+-+---------+----\n      try {\n        const cipherText = await crypto.subtle.encrypt(\n          {\n            name: ENCRYPTION_ALGORITHM,\n            iv,\n            additionalData: new Uint8Array(encodedFrame.data, 0, frameHeader.byteLength),\n          },\n          encryptionKey,\n          new Uint8Array(encodedFrame.data, frameInfo.unencryptedBytes),\n        );\n\n        let newDataWithoutHeader = new Uint8Array(\n          cipherText.byteLength + iv.byteLength + frameTrailer.byteLength,\n        );\n        newDataWithoutHeader.set(new Uint8Array(cipherText)); // add ciphertext.\n        newDataWithoutHeader.set(new Uint8Array(iv), cipherText.byteLength); // append IV.\n        newDataWithoutHeader.set(frameTrailer, cipherText.byteLength + iv.byteLength); // append frame trailer.\n\n        if (frameInfo.isH264) {\n          newDataWithoutHeader = writeRbsp(newDataWithoutHeader);\n        }\n\n        var newData = new Uint8Array(frameHeader.byteLength + newDataWithoutHeader.byteLength);\n        newData.set(frameHeader);\n        newData.set(newDataWithoutHeader, frameHeader.byteLength);\n\n        encodedFrame.data = newData.buffer;\n\n        return controller.enqueue(encodedFrame);\n      } catch (e: any) {\n        // TODO: surface this to the app.\n        workerLogger.error(e);\n      }\n    } else {\n      this.emit(\n        CryptorEvent.Error,\n        new CryptorError(`encryption key missing for encoding`, CryptorErrorReason.MissingKey),\n      );\n    }\n  }\n\n  /**\n   * Function that will be injected in a stream and will decrypt the given encoded frames.\n   *\n   * @param {RTCEncodedVideoFrame|RTCEncodedAudioFrame} encodedFrame - Encoded video frame.\n   * @param {TransformStreamDefaultController} controller - TransportStreamController.\n   */\n  protected async decodeFunction(\n    encodedFrame: RTCEncodedVideoFrame | RTCEncodedAudioFrame,\n    controller: TransformStreamDefaultController,\n  ) {\n    if (\n      !this.isEnabled() ||\n      // skip for decryption for empty dtx frames\n      encodedFrame.data.byteLength === 0\n    ) {\n      this.sifGuard.recordUserFrame();\n      return controller.enqueue(encodedFrame);\n    }\n\n    if (isFrameServerInjected(encodedFrame.data, this.sifTrailer)) {\n      this.sifGuard.recordSif();\n\n      if (this.sifGuard.isSifAllowed()) {\n        encodedFrame.data = encodedFrame.data.slice(\n          0,\n          encodedFrame.data.byteLength - this.sifTrailer.byteLength,\n        );\n        return controller.enqueue(encodedFrame);\n      } else {\n        workerLogger.warn('SIF limit reached, dropping frame');\n        return;\n      }\n    } else {\n      this.sifGuard.recordUserFrame();\n    }\n    const data = new Uint8Array(encodedFrame.data);\n    const keyIndex = data[encodedFrame.data.byteLength - 1];\n\n    if (this.keys.getKeySet(keyIndex) && this.keys.hasValidKey) {\n      try {\n        const decodedFrame = await this.decryptFrame(encodedFrame, keyIndex);\n        this.keys.decryptionSuccess();\n        if (decodedFrame) {\n          return controller.enqueue(decodedFrame);\n        }\n      } catch (error) {\n        if (error instanceof CryptorError && error.reason === CryptorErrorReason.InvalidKey) {\n          if (this.keys.hasValidKey) {\n            this.emit(CryptorEvent.Error, error);\n            this.keys.decryptionFailure();\n          }\n        } else {\n          workerLogger.warn('decoding frame failed', { error });\n        }\n      }\n    } else if (!this.keys.getKeySet(keyIndex) && this.keys.hasValidKey) {\n      // emit an error in case the key index is out of bounds but the key handler thinks we still have a valid key\n      workerLogger.warn(`skipping decryption due to missing key at index ${keyIndex}`);\n      this.emit(\n        CryptorEvent.Error,\n        new CryptorError(\n          `missing key at index ${keyIndex} for participant ${this.participantIdentity}`,\n          CryptorErrorReason.MissingKey,\n        ),\n      );\n    }\n  }\n\n  /**\n   * Function that will decrypt the given encoded frame. If the decryption fails, it will\n   * ratchet the key for up to RATCHET_WINDOW_SIZE times.\n   */\n  private async decryptFrame(\n    encodedFrame: RTCEncodedVideoFrame | RTCEncodedAudioFrame,\n    keyIndex: number,\n    initialMaterial: KeySet | undefined = undefined,\n    ratchetOpts: DecodeRatchetOptions = { ratchetCount: 0 },\n  ): Promise<RTCEncodedVideoFrame | RTCEncodedAudioFrame | undefined> {\n    const keySet = this.keys.getKeySet(keyIndex);\n    if (!ratchetOpts.encryptionKey && !keySet) {\n      throw new TypeError(`no encryption key found for decryption of ${this.participantIdentity}`);\n    }\n    let frameInfo = this.getUnencryptedBytes(encodedFrame);\n    // Construct frame trailer. Similar to the frame header described in\n    // https://tools.ietf.org/html/draft-omara-sframe-00#section-4.2\n    // but we put it at the end.\n    //\n    // ---------+-------------------------+-+---------+----\n    // payload  |IV...(length = IV_LENGTH)|R|IV_LENGTH|KID |\n    // ---------+-------------------------+-+---------+----\n\n    try {\n      const frameHeader = new Uint8Array(encodedFrame.data, 0, frameInfo.unencryptedBytes);\n      var encryptedData = new Uint8Array(\n        encodedFrame.data,\n        frameHeader.length,\n        encodedFrame.data.byteLength - frameHeader.length,\n      );\n      if (frameInfo.isH264 && needsRbspUnescaping(encryptedData)) {\n        encryptedData = parseRbsp(encryptedData);\n        const newUint8 = new Uint8Array(frameHeader.byteLength + encryptedData.byteLength);\n        newUint8.set(frameHeader);\n        newUint8.set(encryptedData, frameHeader.byteLength);\n        encodedFrame.data = newUint8.buffer;\n      }\n\n      const frameTrailer = new Uint8Array(encodedFrame.data, encodedFrame.data.byteLength - 2, 2);\n\n      const ivLength = frameTrailer[0];\n      const iv = new Uint8Array(\n        encodedFrame.data,\n        encodedFrame.data.byteLength - ivLength - frameTrailer.byteLength,\n        ivLength,\n      );\n\n      const cipherTextStart = frameHeader.byteLength;\n      const cipherTextLength =\n        encodedFrame.data.byteLength -\n        (frameHeader.byteLength + ivLength + frameTrailer.byteLength);\n\n      const plainText = await crypto.subtle.decrypt(\n        {\n          name: ENCRYPTION_ALGORITHM,\n          iv,\n          additionalData: new Uint8Array(encodedFrame.data, 0, frameHeader.byteLength),\n        },\n        ratchetOpts.encryptionKey ?? keySet!.encryptionKey,\n        new Uint8Array(encodedFrame.data, cipherTextStart, cipherTextLength),\n      );\n\n      const newData = new ArrayBuffer(frameHeader.byteLength + plainText.byteLength);\n      const newUint8 = new Uint8Array(newData);\n\n      newUint8.set(new Uint8Array(encodedFrame.data, 0, frameHeader.byteLength));\n      newUint8.set(new Uint8Array(plainText), frameHeader.byteLength);\n\n      encodedFrame.data = newData;\n\n      return encodedFrame;\n    } catch (error: any) {\n      if (this.keyProviderOptions.ratchetWindowSize > 0) {\n        if (ratchetOpts.ratchetCount < this.keyProviderOptions.ratchetWindowSize) {\n          workerLogger.debug(\n            `ratcheting key attempt ${ratchetOpts.ratchetCount} of ${\n              this.keyProviderOptions.ratchetWindowSize\n            }, for kind ${encodedFrame instanceof RTCEncodedAudioFrame ? 'audio' : 'video'}`,\n          );\n\n          let ratchetedKeySet: KeySet | undefined;\n          if ((initialMaterial ?? keySet) === this.keys.getKeySet(keyIndex)) {\n            // only ratchet if the currently set key is still the same as the one used to decrypt this frame\n            // if not, it might be that a different frame has already ratcheted and we try with that one first\n            const newMaterial = await this.keys.ratchetKey(keyIndex, false);\n\n            ratchetedKeySet = await deriveKeys(newMaterial, this.keyProviderOptions.ratchetSalt);\n          }\n\n          const frame = await this.decryptFrame(encodedFrame, keyIndex, initialMaterial || keySet, {\n            ratchetCount: ratchetOpts.ratchetCount + 1,\n            encryptionKey: ratchetedKeySet?.encryptionKey,\n          });\n          if (frame && ratchetedKeySet) {\n            // before updating the keys, make sure that the keySet used for this frame is still the same as the currently set key\n            // if it's not, a new key might have been set already, which we don't want to override\n            if ((initialMaterial ?? keySet) === this.keys.getKeySet(keyIndex)) {\n              this.keys.setKeySet(ratchetedKeySet, keyIndex, true);\n              // decryption was successful, set the new key index to reflect the ratcheted key set\n              this.keys.setCurrentKeyIndex(keyIndex);\n            }\n          }\n          return frame;\n        } else {\n          /**\n           * Because we only set a new key once decryption has been successful,\n           * we can be sure that we don't need to reset the key to the initial material at this point\n           * as the key has not been updated on the keyHandler instance\n           */\n\n          workerLogger.warn('maximum ratchet attempts exceeded');\n          throw new CryptorError(\n            `valid key missing for participant ${this.participantIdentity}`,\n            CryptorErrorReason.InvalidKey,\n          );\n        }\n      } else {\n        throw new CryptorError(\n          `Decryption failed: ${error.message}`,\n          CryptorErrorReason.InvalidKey,\n        );\n      }\n    }\n  }\n\n  /**\n   * Construct the IV used for AES-GCM and sent (in plain) with the packet similar to\n   * https://tools.ietf.org/html/rfc7714#section-8.1\n   * It concatenates\n   * - the 32 bit synchronization source (SSRC) given on the encoded frame,\n   * - the 32 bit rtp timestamp given on the encoded frame,\n   * - a send counter that is specific to the SSRC. Starts at a random number.\n   * The send counter is essentially the pictureId but we currently have to implement this ourselves.\n   * There is no XOR with a salt. Note that this IV leaks the SSRC to the receiver but since this is\n   * randomly generated and SFUs may not rewrite this is considered acceptable.\n   * The SSRC is used to allow demultiplexing multiple streams with the same key, as described in\n   *   https://tools.ietf.org/html/rfc3711#section-4.1.1\n   * The RTP timestamp is 32 bits and advances by the codec clock rate (90khz for video, 48khz for\n   * opus audio) every second. For video it rolls over roughly every 13 hours.\n   * The send counter will advance at the frame rate (30fps for video, 50fps for 20ms opus audio)\n   * every second. It will take a long time to roll over.\n   *\n   * See also https://developer.mozilla.org/en-US/docs/Web/API/AesGcmParams\n   */\n  private makeIV(synchronizationSource: number, timestamp: number) {\n    const iv = new ArrayBuffer(IV_LENGTH);\n    const ivView = new DataView(iv);\n\n    // having to keep our own send count (similar to a picture id) is not ideal.\n    if (!this.sendCounts.has(synchronizationSource)) {\n      // Initialize with a random offset, similar to the RTP sequence number.\n      this.sendCounts.set(synchronizationSource, Math.floor(Math.random() * 0xffff));\n    }\n\n    const sendCount = this.sendCounts.get(synchronizationSource) ?? 0;\n\n    ivView.setUint32(0, synchronizationSource);\n    ivView.setUint32(4, timestamp);\n    ivView.setUint32(8, timestamp - (sendCount % 0xffff));\n\n    this.sendCounts.set(synchronizationSource, sendCount + 1);\n\n    return iv;\n  }\n\n  private getUnencryptedBytes(frame: RTCEncodedVideoFrame | RTCEncodedAudioFrame): {\n    unencryptedBytes: number;\n    isH264: boolean;\n  } {\n    var frameInfo = { unencryptedBytes: 0, isH264: false };\n    if (isVideoFrame(frame)) {\n      let detectedCodec = this.getVideoCodec(frame) ?? this.videoCodec;\n\n      if (detectedCodec === 'av1' || detectedCodec === 'vp9') {\n        throw new Error(`${detectedCodec} is not yet supported for end to end encryption`);\n      }\n\n      if (detectedCodec === 'vp8') {\n        frameInfo.unencryptedBytes = UNENCRYPTED_BYTES[frame.type];\n        return frameInfo;\n      }\n\n      const data = new Uint8Array(frame.data);\n      try {\n        const naluIndices = findNALUIndices(data);\n\n        // if the detected codec is undefined we test whether it _looks_ like a h264 frame as a best guess\n        frameInfo.isH264 =\n          detectedCodec === 'h264' ||\n          naluIndices.some((naluIndex) =>\n            [NALUType.SLICE_IDR, NALUType.SLICE_NON_IDR].includes(parseNALUType(data[naluIndex])),\n          );\n\n        if (frameInfo.isH264) {\n          for (const index of naluIndices) {\n            let type = parseNALUType(data[index]);\n            switch (type) {\n              case NALUType.SLICE_IDR:\n              case NALUType.SLICE_NON_IDR:\n                frameInfo.unencryptedBytes = index + 2;\n                return frameInfo;\n              default:\n                break;\n            }\n          }\n          throw new TypeError('Could not find NALU');\n        }\n      } catch (e) {\n        // no op, we just continue and fallback to vp8\n      }\n\n      frameInfo.unencryptedBytes = UNENCRYPTED_BYTES[frame.type];\n      return frameInfo;\n    } else {\n      frameInfo.unencryptedBytes = UNENCRYPTED_BYTES.audio;\n      return frameInfo;\n    }\n  }\n\n  /**\n   * inspects frame payloadtype if available and maps it to the codec specified in rtpMap\n   */\n  private getVideoCodec(frame: RTCEncodedVideoFrame): VideoCodec | undefined {\n    if (this.rtpMap.size === 0) {\n      return undefined;\n    }\n    // @ts-expect-error payloadType is not yet part of the typescript definition and currently not supported in Safari\n    const payloadType = frame.getMetadata().payloadType;\n    const codec = payloadType ? this.rtpMap.get(payloadType) : undefined;\n    return codec;\n  }\n}\n\n/**\n * Slice the NALUs present in the supplied buffer, assuming it is already byte-aligned\n * code adapted from https://github.com/medooze/h264-frame-parser/blob/main/lib/NalUnits.ts to return indices only\n */\nexport function findNALUIndices(stream: Uint8Array): number[] {\n  const result: number[] = [];\n  let start = 0,\n    pos = 0,\n    searchLength = stream.length - 2;\n  while (pos < searchLength) {\n    // skip until end of current NALU\n    while (\n      pos < searchLength &&\n      !(stream[pos] === 0 && stream[pos + 1] === 0 && stream[pos + 2] === 1)\n    )\n      pos++;\n    if (pos >= searchLength) pos = stream.length;\n    // remove trailing zeros from current NALU\n    let end = pos;\n    while (end > start && stream[end - 1] === 0) end--;\n    // save current NALU\n    if (start === 0) {\n      if (end !== start) throw TypeError('byte stream contains leading data');\n    } else {\n      result.push(start);\n    }\n    // begin new NALU\n    start = pos = pos + 3;\n  }\n  return result;\n}\n\nexport function parseNALUType(startByte: number): NALUType {\n  return startByte & kNaluTypeMask;\n}\n\nconst kNaluTypeMask = 0x1f;\n\nexport enum NALUType {\n  /** Coded slice of a non-IDR picture */\n  SLICE_NON_IDR = 1,\n  /** Coded slice data partition A */\n  SLICE_PARTITION_A = 2,\n  /** Coded slice data partition B */\n  SLICE_PARTITION_B = 3,\n  /** Coded slice data partition C */\n  SLICE_PARTITION_C = 4,\n  /** Coded slice of an IDR picture */\n  SLICE_IDR = 5,\n  /** Supplemental enhancement information */\n  SEI = 6,\n  /** Sequence parameter set */\n  SPS = 7,\n  /** Picture parameter set */\n  PPS = 8,\n  /** Access unit delimiter */\n  AUD = 9,\n  /** End of sequence */\n  END_SEQ = 10,\n  /** End of stream */\n  END_STREAM = 11,\n  /** Filler data */\n  FILLER_DATA = 12,\n  /** Sequence parameter set extension */\n  SPS_EXT = 13,\n  /** Prefix NAL unit */\n  PREFIX_NALU = 14,\n  /** Subset sequence parameter set */\n  SUBSET_SPS = 15,\n  /** Depth parameter set */\n  DPS = 16,\n\n  // 17, 18 reserved\n\n  /** Coded slice of an auxiliary coded picture without partitioning */\n  SLICE_AUX = 19,\n  /** Coded slice extension */\n  SLICE_EXT = 20,\n  /** Coded slice extension for a depth view component or a 3D-AVC texture view component */\n  SLICE_LAYER_EXT = 21,\n\n  // 22, 23 reserved\n}\n\n/**\n * we use a magic frame trailer to detect whether a frame is injected\n * by the livekit server and thus to be treated as unencrypted\n * @internal\n */\nexport function isFrameServerInjected(frameData: ArrayBuffer, trailerBytes: Uint8Array): boolean {\n  if (trailerBytes.byteLength === 0) {\n    return false;\n  }\n  const frameTrailer = new Uint8Array(\n    frameData.slice(frameData.byteLength - trailerBytes.byteLength),\n  );\n  return trailerBytes.every((value, index) => value === frameTrailer[index]);\n}\n","import { EventEmitter } from 'events';\nimport type TypedEventEmitter from 'typed-emitter';\nimport { workerLogger } from '../../logger';\nimport { KEYRING_SIZE } from '../constants';\nimport { KeyHandlerEvent, type ParticipantKeyHandlerCallbacks } from '../events';\nimport type { KeyProviderOptions, KeySet } from '../types';\nimport { deriveKeys, importKey, ratchet } from '../utils';\n\n// TODO ParticipantKeyHandlers currently don't get destroyed on participant disconnect\n// we could do this by having a separate worker message on participant disconnected.\n\n/**\n * ParticipantKeyHandler is responsible for providing a cryptor instance with the\n * en-/decryption key of a participant. It assumes that all tracks of a specific participant\n * are encrypted with the same key.\n * Additionally it exposes a method to ratchet a key which can be used by the cryptor either automatically\n * if decryption fails or can be triggered manually on both sender and receiver side.\n *\n */\nexport class ParticipantKeyHandler extends (EventEmitter as new () => TypedEventEmitter<ParticipantKeyHandlerCallbacks>) {\n  private currentKeyIndex: number;\n\n  private cryptoKeyRing: Array<KeySet | undefined>;\n\n  private keyProviderOptions: KeyProviderOptions;\n\n  private ratchetPromiseMap: Map<number, Promise<CryptoKey>>;\n\n  private participantIdentity: string;\n\n  private decryptionFailureCount = 0;\n\n  private _hasValidKey: boolean = true;\n\n  get hasValidKey() {\n    return this._hasValidKey;\n  }\n\n  constructor(participantIdentity: string, keyProviderOptions: KeyProviderOptions) {\n    super();\n    this.currentKeyIndex = 0;\n    this.cryptoKeyRing = new Array(KEYRING_SIZE).fill(undefined);\n    this.keyProviderOptions = keyProviderOptions;\n    this.ratchetPromiseMap = new Map();\n    this.participantIdentity = participantIdentity;\n    this.resetKeyStatus();\n  }\n\n  decryptionFailure() {\n    if (this.keyProviderOptions.failureTolerance < 0) {\n      return;\n    }\n    this.decryptionFailureCount += 1;\n\n    if (this.decryptionFailureCount > this.keyProviderOptions.failureTolerance) {\n      workerLogger.warn(`key for ${this.participantIdentity} is being marked as invalid`);\n      this._hasValidKey = false;\n    }\n  }\n\n  decryptionSuccess() {\n    this.resetKeyStatus();\n  }\n\n  /**\n   * Call this after user initiated ratchet or a new key has been set in order to make sure to mark potentially\n   * invalid keys as valid again\n   */\n  resetKeyStatus() {\n    this.decryptionFailureCount = 0;\n    this._hasValidKey = true;\n  }\n\n  /**\n   * Ratchets the current key (or the one at keyIndex if provided) and\n   * returns the ratcheted material\n   * if `setKey` is true (default), it will also set the ratcheted key directly on the crypto key ring\n   * @param keyIndex\n   * @param setKey\n   */\n  ratchetKey(keyIndex?: number, setKey = true): Promise<CryptoKey> {\n    const currentKeyIndex = keyIndex ?? this.getCurrentKeyIndex();\n\n    const existingPromise = this.ratchetPromiseMap.get(currentKeyIndex);\n    if (typeof existingPromise !== 'undefined') {\n      return existingPromise;\n    }\n    const ratchetPromise = new Promise<CryptoKey>(async (resolve, reject) => {\n      try {\n        const keySet = this.getKeySet(currentKeyIndex);\n        if (!keySet) {\n          throw new TypeError(\n            `Cannot ratchet key without a valid keyset of participant ${this.participantIdentity}`,\n          );\n        }\n        const currentMaterial = keySet.material;\n        const newMaterial = await importKey(\n          await ratchet(currentMaterial, this.keyProviderOptions.ratchetSalt),\n          currentMaterial.algorithm.name,\n          'derive',\n        );\n\n        if (setKey) {\n          this.setKeyFromMaterial(newMaterial, currentKeyIndex, true);\n          this.emit(\n            KeyHandlerEvent.KeyRatcheted,\n            newMaterial,\n            this.participantIdentity,\n            currentKeyIndex,\n          );\n        }\n        resolve(newMaterial);\n      } catch (e) {\n        reject(e);\n      } finally {\n        this.ratchetPromiseMap.delete(currentKeyIndex);\n      }\n    });\n    this.ratchetPromiseMap.set(currentKeyIndex, ratchetPromise);\n    return ratchetPromise;\n  }\n\n  /**\n   * takes in a key material with `deriveBits` and `deriveKey` set as key usages\n   * and derives encryption keys from the material and sets it on the key ring buffer\n   * together with the material\n   * also resets the valid key property and updates the currentKeyIndex\n   */\n  async setKey(material: CryptoKey, keyIndex = 0) {\n    await this.setKeyFromMaterial(material, keyIndex);\n    this.resetKeyStatus();\n  }\n\n  /**\n   * takes in a key material with `deriveBits` and `deriveKey` set as key usages\n   * and derives encryption keys from the material and sets it on the key ring buffer\n   * together with the material\n   * also updates the currentKeyIndex\n   */\n  async setKeyFromMaterial(material: CryptoKey, keyIndex = 0, emitRatchetEvent = false) {\n    const newIndex = keyIndex >= 0 ? keyIndex % this.cryptoKeyRing.length : -1;\n    workerLogger.debug(`setting new key with index ${newIndex}`);\n    const keySet = await deriveKeys(material, this.keyProviderOptions.ratchetSalt);\n    this.setKeySet(keySet, newIndex >= 0 ? newIndex : this.currentKeyIndex, emitRatchetEvent);\n    if (newIndex >= 0) this.currentKeyIndex = newIndex;\n  }\n\n  setKeySet(keySet: KeySet, keyIndex: number, emitRatchetEvent = false) {\n    this.cryptoKeyRing[keyIndex % this.cryptoKeyRing.length] = keySet;\n\n    if (emitRatchetEvent) {\n      this.emit(KeyHandlerEvent.KeyRatcheted, keySet.material, this.participantIdentity, keyIndex);\n    }\n  }\n\n  async setCurrentKeyIndex(index: number) {\n    this.currentKeyIndex = index % this.cryptoKeyRing.length;\n    this.resetKeyStatus();\n  }\n\n  getCurrentKeyIndex() {\n    return this.currentKeyIndex;\n  }\n\n  /**\n   * returns currently used KeySet or the one at `keyIndex` if provided\n   * @param keyIndex\n   * @returns\n   */\n  getKeySet(keyIndex?: number) {\n    return this.cryptoKeyRing[keyIndex ?? this.currentKeyIndex];\n  }\n}\n","import { workerLogger } from '../../logger';\nimport { KEY_PROVIDER_DEFAULTS } from '../constants';\nimport { CryptorErrorReason } from '../errors';\nimport { CryptorEvent, KeyHandlerEvent } from '../events';\nimport type {\n  E2EEWorkerMessage,\n  ErrorMessage,\n  InitAck,\n  KeyProviderOptions,\n  RatchetMessage,\n  RatchetRequestMessage,\n} from '../types';\nimport { FrameCryptor, encryptionEnabledMap } from './FrameCryptor';\nimport { ParticipantKeyHandler } from './ParticipantKeyHandler';\n\nconst participantCryptors: FrameCryptor[] = [];\nconst participantKeys: Map<string, ParticipantKeyHandler> = new Map();\nlet sharedKeyHandler: ParticipantKeyHandler | undefined;\n\nlet isEncryptionEnabled: boolean = false;\n\nlet useSharedKey: boolean = false;\n\nlet sharedKey: CryptoKey | undefined;\n\nlet sifTrailer: Uint8Array | undefined;\n\nlet keyProviderOptions: KeyProviderOptions = KEY_PROVIDER_DEFAULTS;\n\nworkerLogger.setDefaultLevel('info');\n\nonmessage = (ev) => {\n  const { kind, data }: E2EEWorkerMessage = ev.data;\n\n  switch (kind) {\n    case 'init':\n      workerLogger.info('worker initialized');\n      keyProviderOptions = data.keyProviderOptions;\n      useSharedKey = !!data.keyProviderOptions.sharedKey;\n      // acknowledge init successful\n      const ackMsg: InitAck = {\n        kind: 'initAck',\n        data: { enabled: isEncryptionEnabled },\n      };\n      postMessage(ackMsg);\n      break;\n    case 'enable':\n      setEncryptionEnabled(data.enabled, data.participantIdentity);\n      workerLogger.info('updated e2ee enabled status');\n      // acknowledge enable call successful\n      postMessage(ev.data);\n      break;\n    case 'decode':\n      let cryptor = getTrackCryptor(data.participantIdentity, data.trackId);\n      cryptor.setupTransform(\n        kind,\n        data.readableStream,\n        data.writableStream,\n        data.trackId,\n        data.codec,\n      );\n      break;\n    case 'encode':\n      let pubCryptor = getTrackCryptor(data.participantIdentity, data.trackId);\n      pubCryptor.setupTransform(\n        kind,\n        data.readableStream,\n        data.writableStream,\n        data.trackId,\n        data.codec,\n      );\n      break;\n    case 'setKey':\n      if (useSharedKey) {\n        workerLogger.warn('set shared key');\n        setSharedKey(data.key, data.keyIndex);\n      } else if (data.participantIdentity) {\n        workerLogger.warn(\n          `set participant sender key ${data.participantIdentity} index ${data.keyIndex}`,\n        );\n        getParticipantKeyHandler(data.participantIdentity).setKey(data.key, data.keyIndex);\n      } else {\n        workerLogger.error('no participant Id was provided and shared key usage is disabled');\n      }\n      break;\n    case 'removeTransform':\n      unsetCryptorParticipant(data.trackId);\n      break;\n    case 'updateCodec':\n      getTrackCryptor(data.participantIdentity, data.trackId).setVideoCodec(data.codec);\n      break;\n    case 'setRTPMap':\n      // this is only used for the local participant\n      participantCryptors.forEach((cr) => {\n        if (cr.getParticipantIdentity() === data.participantIdentity) {\n          cr.setRtpMap(data.map);\n        }\n      });\n      break;\n    case 'ratchetRequest':\n      handleRatchetRequest(data);\n      break;\n    case 'setSifTrailer':\n      handleSifTrailer(data.trailer);\n      break;\n    default:\n      break;\n  }\n};\n\nasync function handleRatchetRequest(data: RatchetRequestMessage['data']) {\n  if (useSharedKey) {\n    const keyHandler = getSharedKeyHandler();\n    await keyHandler.ratchetKey(data.keyIndex);\n    keyHandler.resetKeyStatus();\n  } else if (data.participantIdentity) {\n    const keyHandler = getParticipantKeyHandler(data.participantIdentity);\n    await keyHandler.ratchetKey(data.keyIndex);\n    keyHandler.resetKeyStatus();\n  } else {\n    workerLogger.error(\n      'no participant Id was provided for ratchet request and shared key usage is disabled',\n    );\n  }\n}\n\nfunction getTrackCryptor(participantIdentity: string, trackId: string) {\n  let cryptor = participantCryptors.find((c) => c.getTrackId() === trackId);\n  if (!cryptor) {\n    workerLogger.info('creating new cryptor for', { participantIdentity });\n    if (!keyProviderOptions) {\n      throw Error('Missing keyProvider options');\n    }\n    cryptor = new FrameCryptor({\n      participantIdentity,\n      keys: getParticipantKeyHandler(participantIdentity),\n      keyProviderOptions,\n      sifTrailer,\n    });\n\n    setupCryptorErrorEvents(cryptor);\n    participantCryptors.push(cryptor);\n  } else if (participantIdentity !== cryptor.getParticipantIdentity()) {\n    // assign new participant id to track cryptor and pass in correct key handler\n    cryptor.setParticipant(participantIdentity, getParticipantKeyHandler(participantIdentity));\n  }\n  if (sharedKey) {\n  }\n  return cryptor;\n}\n\nfunction getParticipantKeyHandler(participantIdentity: string) {\n  if (useSharedKey) {\n    return getSharedKeyHandler();\n  }\n  let keys = participantKeys.get(participantIdentity);\n  if (!keys) {\n    keys = new ParticipantKeyHandler(participantIdentity, keyProviderOptions);\n    if (sharedKey) {\n      keys.setKey(sharedKey);\n    }\n    keys.on(KeyHandlerEvent.KeyRatcheted, emitRatchetedKeys);\n    participantKeys.set(participantIdentity, keys);\n  }\n  return keys;\n}\n\nfunction getSharedKeyHandler() {\n  if (!sharedKeyHandler) {\n    sharedKeyHandler = new ParticipantKeyHandler('shared-key', keyProviderOptions);\n  }\n  return sharedKeyHandler;\n}\n\nfunction unsetCryptorParticipant(trackId: string) {\n  participantCryptors.find((c) => c.getTrackId() === trackId)?.unsetParticipant();\n}\n\nfunction setEncryptionEnabled(enable: boolean, participantIdentity: string) {\n  encryptionEnabledMap.set(participantIdentity, enable);\n}\n\nfunction setSharedKey(key: CryptoKey, index?: number) {\n  workerLogger.debug('setting shared key');\n  sharedKey = key;\n  getSharedKeyHandler().setKey(key, index);\n}\n\nfunction setupCryptorErrorEvents(cryptor: FrameCryptor) {\n  cryptor.on(CryptorEvent.Error, (error) => {\n    const msg: ErrorMessage = {\n      kind: 'error',\n      data: { error: new Error(`${CryptorErrorReason[error.reason]}: ${error.message}`) },\n    };\n    postMessage(msg);\n  });\n}\n\nfunction emitRatchetedKeys(material: CryptoKey, participantIdentity: string, keyIndex?: number) {\n  const msg: RatchetMessage = {\n    kind: `ratchetKey`,\n    data: {\n      participantIdentity,\n      keyIndex,\n      material,\n    },\n  };\n  postMessage(msg);\n}\n\nfunction handleSifTrailer(trailer: Uint8Array) {\n  sifTrailer = trailer;\n  participantCryptors.forEach((c) => {\n    c.setSifTrailer(trailer);\n  });\n}\n\n// Operations using RTCRtpScriptTransform.\n// @ts-ignore\nif (self.RTCTransformEvent) {\n  workerLogger.debug('setup transform event');\n  // @ts-ignore\n  self.onrtctransform = (event) => {\n    const transformer = event.transformer;\n    workerLogger.debug('transformer', transformer);\n    transformer.handled = true;\n    const { kind, participantIdentity, trackId, codec } = transformer.options;\n    const cryptor = getTrackCryptor(participantIdentity, trackId);\n    workerLogger.debug('transform', { codec });\n    cryptor.setupTransform(kind, transformer.readable, transformer.writable, trackId, codec);\n  };\n}\n"],"names":["root","definition","module","exports","log","this","noop","undefinedType","isIE","window","navigator","test","userAgent","logMethods","bindMethod","obj","methodName","method","bind","Function","prototype","call","e","apply","arguments","traceForIE","console","trace","realMethod","undefined","replaceLoggingMethods","level","loggerName","i","length","methodFactory","debug","enableLoggingWhenConsoleArrives","defaultMethodFactory","Logger","name","defaultLevel","factory","self","currentLevel","storageKey","persistLevelIfPossible","levelNum","levelName","toUpperCase","localStorage","ignore","document","cookie","encodeURIComponent","getPersistedLevel","storedLevel","location","indexOf","exec","slice","levels","clearPersistedLevel","removeItem","getLevel","setLevel","persist","SILENT","setDefaultLevel","resetLevel","enableAll","TRACE","disableAll","initialLevel","defaultLogger","_loggersByName","getLogger","TypeError","logger","_log","noConflict","getLoggers","LogLevel","LoggerNames","livekitLogger","info","workerLogger","ENCRYPTION_ALGORITHM","KEYRING_SIZE","DECRYPTION_FAILURE_TOLERANCE","UNENCRYPTED_BYTES","key","delta","audio","empty","IV_LENGTH","SALT","KEY_PROVIDER_DEFAULTS","sharedKey","ratchetSalt","ratchetWindowSize","failureTolerance","MAX_SIF_COUNT","MAX_SIF_DURATION","LivekitError","Error","constructor","code","message","MediaDeviceFailure","getFailure","error","NotFound","PermissionDenied","DeviceInUse","Other","CryptorErrorReason","CryptorError","reason","InternalError","KeyProviderEvent","KeyHandlerEvent","EncryptionEvent","CryptorEvent","R","Reflect","ReflectApply","target","receiver","args","ReflectOwnKeys","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","ProcessEmitWarning","warning","warn","NumberIsNaN","Number","isNaN","value","EventEmitter","init","eventsModule","once","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","defineProperty","enumerable","get","set","arg","RangeError","getPrototypeOf","create","setMaxListeners","n","_getMaxListeners","that","getMaxListeners","emit","type","push","doError","events","er","err","context","handler","len","listeners","arrayClone","_addListener","prepend","m","existing","newListener","unshift","warned","w","String","emitter","count","addListener","on","prependListener","onceWrapper","fired","removeListener","wrapFn","_onceWrap","state","wrapped","prependOnceListener","list","position","originalListener","shift","spliceOne","off","removeAllListeners","keys","_listeners","unwrap","evlistener","unwrapListeners","rawListeners","listenerCount","eventNames","arr","copy","Array","index","pop","ret","Promise","resolve","reject","errorListener","resolver","eventTargetAgnosticAddListener","addErrorHandlerIfEventEmitter","flags","addEventListener","wrapListener","removeEventListener","isVideoFrame","frame","importKey","keyBytes","algorithm","usage","crypto","subtle","getAlgoOptions","algorithmName","salt","textEncoder","TextEncoder","encodedSalt","encode","hash","ArrayBuffer","iterations","deriveKeys","material","algorithmOptions","encryptionKey","deriveKey","ratchet","deriveBits","needsRbspUnescaping","frameData","parseRbsp","stream","dataOut","Uint8Array","kZerosInStartSequence","kEmulationByte","writeRbsp","data_in","numConsecutiveZeros","byte","SifGuard","consecutiveSifCount","lastSifReceivedAt","userFramesSinceSif","recordSif","_a","sifSequenceStartedAt","Date","now","recordUserFrame","reset","isSifAllowed","encryptionEnabledMap","Map","BaseFrameCryptor","encodeFunction","encodedFrame","controller","decodeFunction","FrameCryptor","opts","sendCounts","participantIdentity","rtpMap","keyProviderOptions","sifTrailer","from","sifGuard","setParticipant","id","unsetParticipant","isEnabled","getParticipantIdentity","getTrackId","trackId","setVideoCodec","codec","videoCodec","setRtpMap","map","setupTransform","operation","readable","writable","transformFn","transformStream","TransformStream","transform","pipeThrough","pipeTo","catch","setSifTrailer","trailer","data","byteLength","enqueue","keySet","getKeySet","getCurrentKeyIndex","keyIndex","iv","makeIV","getMetadata","synchronizationSource","timestamp","frameInfo","getUnencryptedBytes","frameHeader","unencryptedBytes","frameTrailer","cipherText","encrypt","additionalData","newDataWithoutHeader","isH264","newData","buffer","MissingKey","isFrameServerInjected","hasValidKey","decodedFrame","decryptFrame","decryptionSuccess","InvalidKey","decryptionFailure","initialMaterial","ratchetOpts","ratchetCount","encryptedData","newUint8","ivLength","cipherTextStart","cipherTextLength","plainText","decrypt","RTCEncodedAudioFrame","ratchetedKeySet","newMaterial","ratchetKey","setKeySet","setCurrentKeyIndex","ivView","DataView","has","Math","floor","random","sendCount","setUint32","detectedCodec","getVideoCodec","naluIndices","findNALUIndices","some","naluIndex","NALUType","SLICE_IDR","SLICE_NON_IDR","includes","parseNALUType","size","payloadType","result","start","pos","searchLength","end","startByte","kNaluTypeMask","trailerBytes","every","ParticipantKeyHandler","_hasValidKey","decryptionFailureCount","currentKeyIndex","cryptoKeyRing","fill","ratchetPromiseMap","resetKeyStatus","setKey","existingPromise","ratchetPromise","__awaiter","currentMaterial","setKeyFromMaterial","KeyRatcheted","delete","emitRatchetEvent","newIndex","participantCryptors","participantKeys","sharedKeyHandler","isEncryptionEnabled","useSharedKey","onmessage","ev","kind","ackMsg","enabled","postMessage","setEncryptionEnabled","cryptor","getTrackCryptor","readableStream","writableStream","pubCryptor","setSharedKey","getParticipantKeyHandler","unsetCryptorParticipant","forEach","cr","handleRatchetRequest","handleSifTrailer","keyHandler","getSharedKeyHandler","find","c","setupCryptorErrorEvents","emitRatchetedKeys","enable","msg","RTCTransformEvent","onrtctransform","event","transformer","handled","options"],"mappings":"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","x_google_ignoreList":[0,6]}